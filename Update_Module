PARSING_LINE

var debug = false;

const ver = "깡통봇 1.9";

const short = "\u200b".repeat(500);

var sdcard = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();
var path = sdcard+"/ChatBot/BotData/Saves/";

var SCORE = [];
var NAME = [];
var top = 0;

var weight = 5;
var weight_count = 1;

var rad = 0;
var radp = [];
var radpp = 0;

var input = [];
var output = [];
var person = [];

var Hours =[];
var Minutes =[];
var Seconds = [];
var Milliseconds=[];
var dobae = 500;

var vote_able = [];
var vote = [];
var vote_cast = [];

var mail = [];

for(let i = 0; i < 10;i ++){
    vote_cast[i] = [];
    vote_able[i] = true;
    vote[i] = false;
}
function Backup(){
    var data ="";
    for(var i =0;i<30;i++){
	if(input[i] != undefined){
	    if(input[i]==undefined) break;
	    data += input[i]+"COMMA"+output[i]+"COMMA"+person[i]+"\n";
        }
    }
    save("command_backup.txt",data);
    data = "";
    for(var i = 0;i<top;i++){
    	data += SCORE[i]+"COMMA"+NAME[i]+"\n";
    }
    save("score_backup.txt",data);
    data = "";
    for(var i = 0;i<top;i++){
        if(mail[i] == undefined) mail[i] = "";
        data+=mail[i].replace(/\n/g,"SLASHN")+"\n";
    }
    save("mail_backup.txt",data);
    data = weight + "COMMA" + weight_count;
    save("weight_backup.txt",data);
}
function Recovery(){
    var lod = read("command_backup.txt").split("\n");
    for(var i =0;i<30;i++){
	if(lod[i] != undefined){
	    var data = lod[i].split("COMMA");
	    input[i] = data[0];
	    output[i] = data[1];
	    person[i] = data[2];
	}
    }
    var lod = read("score_backup.txt").split("\n");
    top = 0;
    while(1){
        if(lod[top]!=undefined){
            var data = lod[top].split("COMMA");
	    SCORE[top] = Number(data[0]);
	    NAME[top] = data[1];
	    top++;
	}else{
	    break;
	}
    }
    var load = read("mail_backup.txt");
    if(load == undefined) return;
    var lod = load.split("\n");
    var i = 0;
    for(let i = 0;i<top;i++){
        if(lod[i]!=undefined) mail[i] = lod[i].replace(/SLASHN/g,"\n");
    }
    var load = read("weight_backup.txt");
    var data = load.split("COMMA");
    weight = Number(data[0]);
    weight_count = Number(data[1]);
}
function Save(){
    var data ="";
    for(var i =0;i<30;i++){
	if(input[i] != undefined){
	    if(input[i]==undefined) break;
	    data += input[i]+"COMMA"+output[i]+"COMMA"+person[i]+"\n";
        }
    }
    save("command.txt",data);
    data = "";
    for(var i = 0;i<top;i++){
    	data += SCORE[i]+"COMMA"+NAME[i]+"\n";
    }
    save("score.txt",data);
    data = "";
    for(var i = 0;i<top;i++){
        if(mail[i] == undefined) mail[i] = "";
        data+=mail[i].replace(/\n/g,"SLASHN")+"\n";
    }
    save("mail.txt",data);
    data = weight + "COMMA" + weight_count;
    save("weight.txt",data);
}
function Load(){
    var lod = read("command.txt").split("\n");
    for(var i =0;i<30;i++){
	if(lod[i] != undefined){
	    var data = lod[i].split("COMMA");
	    input[i] = data[0];
	    output[i] = data[1];
	    person[i] = data[2];
	}
    }
    var lod = read("score.txt").split("\n");
    top = 0;
    while(1){
        if(lod[top]!=undefined){
            var data = lod[top].split("COMMA");
	    SCORE[top] = Number(data[0]);
	    NAME[top] = data[1];
	    top++;
	}else{
	    break;
	}
    }
    var load = read("mail.txt");
    if(load == undefined) return;
    var lod = load.split("\n");
    var i = 0;
    for(let i = 0;i<top;i++){
        if(lod[i]!=undefined) mail[i] = lod[i].replace(/SLASHN/g,"\n");
    }
    var load = read("weight.txt");
    var data = load.split("COMMA");
    weight = Number(data[0]);
    weight_count = Number(data[1]);
}

function save(fileName, Data)
{
    let filePath = path+""+fileName;
    let file = new java.io.File(filePath),
        fileWriter = new java.io.FileWriter(file),
        bufferedWriter = new java.io.BufferedWriter(fileWriter);
   	bufferedWriter.write(new java.lang.String(Data));    
	bufferedWriter.close();
	
   return;
};

function read(fileName)
{
    let filePath = path+""+fileName,
        file = new java.io.File(filePath),
	fileReader = new java.io.FileReader(file),
        bufferedReader = new java.io.BufferedReader(fileReader),
	fileReadLine = "", fileContent = bufferedReader.readLine();

	while ((fileReadLine = bufferedReader.readLine()) != null)
	{
		fileContent += "\n" + fileReadLine;
	}
	bufferedReader.close();

return fileContent;
};

function vote_check(code){
	var O = 0;
	var X = 0;
	for(let i = 0;i<top;i++){
		if(vote_cast[code][i] == 1){
			O++;
		}
		if(vote_cast[code][i] == 2){
			X++;
		}
	}
	return ((O * 100)+X);
};
var time_hour;
var time_min;

var save_cnt = 0;
var save_cnt_max = 10;
var save_chat = true;

var log = [];
var log_head = 0;
var log_max = 50;

function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName) {
    log[log_head] = "";
    log[log_head++] += sender+" : "+msg;
    log_head = log_head % log_max;
    //replier.reply(sender+" : "+msg + "\n"+(log_head-1)+" "+log[log_head-1]);
    weight += msg.length;
    weight_count ++;
    if(msg == "!weight"){
    	replier.reply("가중치 : "+weight+ ", "+weight_count);
    }
    if(debug == true) replier.reply("Weight : "+weight+", Length : "+msg.length);
    save_cnt++;
    if(save_cnt >= save_cnt_max){
        save_cnt = 0;
    	Save();
	if(save_chat == true) replier.reply("자동저장 되었습니다!");
    }
    let date = new Date(),
        hour = date.getHours(),
        minute = date.getMinutes();
    if(hour < time_hour||msg == "!test"){
    
        Save();
        let data = "투표 결과"+short+"\n";
        replier.reply("좋은 하루!");
    	for(let i = 0;i<top;i++){
	    vote_able[i] = true;
	    if(vote[i] == true){
	        let O = vote_check(i);
	  	X = O % 100;
		O = (O - X)/100;
		
		if(O>=top/2){
		    data += NAME[i]+"님의 투표가 O "+O+"표로 가결되었습니다!\n"
		    vote[i] = false;
		}else{
		     data += NAME[i]+"님의 투표가 O "+O+"표, X "+X+"표로 부결되었습니다!\n";
		    vote[i] = false;
		}
	    }
	}
	replier.reply(data);
    }
    time_hour = hour;
    time_date = minute;
    var chat = msg.split(" ");
    var sendercode;
    if(chat[0] == "!save"){
        if(chat[1] == "count"){
	    if(chat[2] != undefined){
	    	save_cnt_max = Number(chat[2]);
		replier.reply("Complete!");
		
	    }
	}else if(chat[1] == "chat"){
	    if(chat[2] == "ON"){
	        save_chat = true;
	        replier.reply("Complete!");
	    }
	    else if(chat[2] == "OFF"){
	        save_chat = false;
	        replier.reply("Complete!");
	    }
	}else{
            Save();
	    replier.reply("저장을 완료 했습니다!");
	}
	return;
    }
    if(chat[0] == "!load"&&room == "조현우"){
    	Load();
	replier.reply("로딩을 완료 했습니다!");
	return;
    }
    if(chat[0] == "!backup"){
    	Backup();
	replier.reply("백업을 완료 했습니다!");
	return;
    }
    if(chat[0] == "!recovery"&&room == "조현우"){
    	Recovery();
	replier.reply("복원을 완료 했습니다!");
	return;
    }
    
    if(chat[0] == "!refresh"){
    	Save();
    	Load();
	replier.reply("새로고침을 완료 했습니다!\ncode - "+top);
	return;
    }
    if(chat[0] == "!log"){
        if(chat[1] == "debug"){
	    for(var i = log_head;i<log_head+log_max;i++){
		replier.reply(i%log_max+" "+log[i%log_max]);
	    }
	}else if(chat[1] == "set"){
	    if(chat[2]==undefined||Number(chat[2])>300||Number(chat[2])<0){
	        replier.reply("ER!");
	    }else{
	        log_max = Number(chat[2]);
	        replier.reply(log_max+" Set!");
	    }
	}else{
	    var data = "";
	    for(var i = log_head;i<log_head+log_max;i++){
	    	if(log[i%log_max]!=""&&log[i%log_max]!=undefined){
		    data+=log[i%log_max]+"\n";
		}
	    }
	    if(data!=""){
		replier.reply("로그"+short+data);
	    }else{
	        replier.reply("ER!")
	    }
	}
    }
    if(msg == "!debug"){
    	if(debug == false) debug = true;
	else debug = false;
    }

    {
        var check = false;
        for(var i = 0;i<=top;i++){
    	    if(sender == NAME[i]){
	        SCORE[i]+=(((msg.length-(weight/weight_count))/(msg.length+(weight/weight_count))) + 1);
		if(debug == true){
		    replier.reply(((msg.length-(weight/weight_count))/(msg.length+(weight/weight_count))) + 1);
		}
	        check = true;
		sendercode = i;
       	    }
        }
        if(check == false){
	    replier.reply(sender+"님의 고유코드는 " +top+ "입니다! 닉네임을 변경한 경우라면 조현우한테 아가리 터세요!");
	    NAME[top] = sender;
	    SCORE[top] = 0;
	    top++;
        }
	if(mail[sendercode]!=""&&mail[sendercode]!=undefined&&mail[sendercode]!=null){
	    replier.reply(sender + "님에게 온 메일이 있습니다!"+short+"\n"+mail[sendercode]);
	    mail[sendercode] = "";
	}
    }
    if(chat[0] == "!penalty"){
    	if(Number(chat[1]) > 0){
	    replier.reply("Success!");
	    dobae = Number(chat[1]);
	}
    }
    let today = new Date();
    hours = today.getHours();
    minutes = today.getMinutes();
    seconds = today.getSeconds();
    milliseconds = today.getMilliseconds();
    if( (3600000 * (hours - Hours[sendercode])) + (60000 * (minutes - Minutes[sendercode])) + (1000 * (seconds - Seconds[sendercode]))+(milliseconds - Milliseconds[sendercode]) < dobae){
    	replier.reply(NAME[sendercode]+" 도배 검지\n -10P");
	SCORE[sendercode] -= 10;
    }
    Hours[sendercode] = hours;
    Minutes[sendercode] = minutes;
    Seconds[sendercode] = seconds;
    Milliseconds[sendercode] = milliseconds;
    if(chat[0] == "!chance"){
        if(chat[1] == undefined) replier.reply("!chance + (걸 포인트 1 ~ 10000)를 입력하시면 추첨에 돈을 넣을수 있습니다. 추첨을 종료하시려면 !chance end를 입력하세요.");
	else if(chat[1] == "end"){
            if(rad <=0||radpp <= 0){
	    	replier.reply("추첨에 현재 걸려있는 돈이 없습니다.");
	    }else{
	        let pla = Math.floor(Math.random()*radpp);
		replier.reply(NAME[radp[pla]]+"님이 총 "+rad/10*9+"P를 획득하셨습니다!");
		SCORE[pla] += rad/10*9;
		rad = 0;
		for(let i = 0;i<radpp;i++) radp[i] = 0;
		radpp = 0;
		
	    }
	}else if(Number(chat[1])>=1&&Number(chat[1])<=10000){
	    if(SCORE[sendercode] < Number(chat[1])){
	    	replier.reply("포인트가 부족합니다.");
	    }else{
	        let chk = -1;
		for(let i = 0;i<radpp;i++) if(radp[i] == sendercode) chk = i;
		if(chk == -1){
		    SCORE[sendercode] -= Number(chat[1]);
		    rad+=Number(chat[1]);
		    radp[radpp] = sendercode;
		    radpp++;
		    replier.reply("완료했습니다!");
		}else{
		    SCORE[sendercode] -= Number(chat[1]);
		    rad+=Number(chat[1]);
		    radp[chk] = sendercode;
		    replier.reply("완료했습니다!");
		}
	    }
	}else{
	    replier.reply("!chance + (걸 포인트 1 ~ 10000)를 입력하시면 추첨에 돈을 넣을수 있습니다. 추첨을 종료하시려면 !chance end를 입력하세요.");
	}
    }
    if(chat[0] == "!lottery"){
        if(chat[1] == undefined) replier.reply("!lottery (1~20) 을 치시면 500P 복권을 100P에 구입할 수 있습니다!");
	else if(Number(chat[1])<1||Number(chat[1])>20) replier.reply("1~20 의 숫자를 입력해 주십시오!");
	else if(SCORE[sendercode] < 100) replier.reply("포인트가 부족합니다!");
	else{
	    SCORE[sendercode] -= 100
	    let num = Math.floor(Math.random()*20)+1;
	    if(num == chat[1]){
	        SCORE[sendercode] += 500;
	        replier.reply("당첨!\n행운번호 : "+num+"\n"+NAME[sendercode]+" - "+SCORE[sendercode]);
	    }else{
	        replier.reply("꽝...\n행운번호 : "+num+"\n"+NAME[sendercode]+" - "+SCORE[sendercode]);
	    }
	}
    }
    
    if(chat[0] == "!mail"){
        if(chat[1]!=undefined){
	    if(NAME[chat[1]]==undefined){
	    	replier.reply("알 수 없는 코드입니다!");
		return;
	    }
	    var data = msg.replace(chat[0] + " " + chat[1] + " ","");
	    if(chat[2]==undefined){
	    	replier.reply("메일의 내용을 작성해 주십시오!");
		return;
	    }
            if(mail[chat[1]] == undefined) mail[chat[1]] = "";
	    mail[chat[1]] += sender + "님의 메일 : "+data+"\n";
	    replier.reply("성공적으로 메일을 보냈습니다!");
	}else replier.reply("!mail (메일 수신자 코드) <메일 내용> 을 적으시면 수신자가 카톡을 쳤을때 메일을 전송해 드립니다!");
    }
    
    if(chat[0]=="!lol"){
        let prs = Utils.getWebText("http://fow.kr/find/"+chat[1],true);
	if(chat[1] == undefined) replier.reply("!lol (소환사 이름) 을 치시면 전적을 볼 수 있습니다!\n이 기능은 현재 완성되지 않았습니다 보기 불편해도 참으세요!");
	else if(prs.indexOf("DB로 부터 정보를 읽어오고 있습니다.")!=-1) replier.reply("전적을 불러올 수 없습니다!");
	else{
	    let data = prs.split("LV/G/CS");
	    let dt=data[2].split("최근게임 더보기");
	    data = dt[0];
	    dt = null;
	    if(data==undefined){
	    	replier.reply("전적을 불러올수 없습니다!");
		return;
	    }
	    let pars = data.split("\n");
	    let i = 0;
	    let text = chat[1]+"의 전적"+short+"\n";
	    
	    //replier.reply("START");
	    while(1){
	        if(pars[i]!=undefined&&pars[i].indexOf("▼")!=-1){
		let txt = "";
	            let j = 0,
		    	check = false;
		    while(1){
		    	j++;
			if(pars[i-j]!=undefined&&pars[i-j].indexOf("src=")!=-1){
			    for(let k = 1;k<=6;k++){
			        if(pars[i-j-k].trim()!=""&&pars[i-j-k].trim()!=undefined&&pars[i-j-k].trim()!="\n"){
			            txt=pars[i-j-k].trim()+"  "+txt;
			        }
			    }
			    break;
			}else if(pars[i-j]==undefined){
			    break;
			}else{
			    if(pars[i-j].trim()!=""&&pars[i-j].trim()!=undefined&&pars[i-j].trim()!="\n"){
			        txt=pars[i-j].trim()+" "+txt;
			    }
			}
		    }
		    /*while(1){
		        if(txt.indexOf(".")==-1) break;
			txt = substring(0,txt.indexOf(".")+3)+" "+substring(txt.indexOf(".")+3,txt.length);
		    }*/
		    text+=txt.replace(/">/g,"")+"\n";
		}else if(pars[i] == undefined) break;
		i++;
		
	    }
	    //replier.reply(i);
	    replier.reply(text);
	}
    }
    
    if(chat[0] == "!code"){
    	let data = "코드 목록"+short+"\n";
	for(let i = 0;i<top;i++) data += "코드 : "+i+" - "+NAME[i]+"\n";
	replier.reply(data);
    }
    
    if(chat[0] == "!vote"){
        if(chat[1] == "add"){
	    if(vote_able[sendercode] == true){
	        if(chat[2] != undefined && NAME[chat[2]] != undefined){
	            if(vote[chat[2]] == false){
		        for(let i = 0;i<top;i++){
			    vote_cast[chat[2]][i] = 0;
			}
	                vote_able[sendercode] = false;
			vote[chat[2]] = true;
			replier.reply(NAME[chat[2]]+"님의 투표를 시작했습니다! 투표는 내일 0시 0분이후 채팅이 발신 되었을 때 자동종료됩니다!\n투표의 진행상황은 저장되지 않습니다! 업데이트나 새로고침할때 주의해 주십시오!");
		    }else{
		        replier.reply(NAME[chat[2]]+"님의 투표는 이미 진행중입니다!");
	       	    }
		}else{
		    replier.reply("등록 되지 않은 코드 입니다!");
		}
	    }else{
	    	replier.reply("이미 투표를 추가하셨습니다!");
	    }
	}else if(chat[1] == "cast"){
	    if(chat[2] != undefined && NAME[chat[2]] != undefined&&vote[chat[2]] == true){
	    	if(vote_cast[chat[2]][sendercode] == 0||vote_cast[chat[2]][sendercode] == undefined){
		   if(chat[3] == "O"){
		       vote_cast[chat[2]][sendercode] = 1;
		       replier.reply(NAME[chat[2]]+"님의 투표에 O를 선택하셨습니다! 후에 변경할 수 없는 점 유념해 주십시오!");
		   }else if(chat[3] == "X"){
		       vote_cast[chat[2]][sendercode] = 2;
		       replier.reply(NAME[chat[2]]+"님의 투표에 X를 선택하셨습니다! 후에 변경할 수 없는 점 유념해 주십시오!");
		   }else{
		       replier.reply("투표는 O 또는 X로 참가 할수 있습니다!");
		   }
	    	}else{
	       	    replier.reply("이미 투표하셨습니다!");
	    	}
	    }else{
	    	replier.reply("등록되지 않은 코드이거나 대상의 투표가 진행되고 있지 않습니다!");
	    }
	}else if(chat[1] == "status"){
	    let data="투표 현황"+short+"\n";
	    for(let i = 0;i<top;i++){
	        if(vote[i] == true){
	            let O = vote_check(i);
		    X = O % 100;
		    O = (O - X)/100;
		    if(O>=top/2){
		        data += NAME[i]+"님의 투표가 O "+O+"표로 가결되었습니다!\n";
			replier.reply(NAME[i]+"님의 투표가 O "+O+"표로 가결되었습니다!");
		        vote[i] = false;
		    }else if(X>=top/2){
		         data += NAME[i]+"님의 투표가 X "+X+"표로 되었습니다!\n";
			 replier.reply(NAME[i]+"님의 투표가 X "+X+"표로 부결되었습니다!");
			vote[i] = false;
		    }else{
		    	 data += NAME[i]+"님의 투표가 O "+O+"표, X "+X+"표로 진행중입니다!\n";
		    }
 	        }
	    }
	    replier.reply(data);
	}else{
	    replier.reply("투표를 추가하시려면 !vote add (투표 대상의 코드)를, 현재 진행중인 투표에 참가하시려면 !vote cast (투표 대상의 코드) (O / X)를, 진행중인 투표의 상태를 확인하시려면 !vote status를 입력해 주세요!");
	}
    }
    
    if(chat[0] == "!rank"){
        let rank = [],
	    temp = [],
	    max = -1;
	for(let i = 0;i<top;i++) temp[i] = false;
	for(let i = 0;i<top;i++){
	//replier.reply(NAME[i] + " - " +SCORE[i]);
	    for(let j = 0;j<top;j++){
	    	if(max < SCORE[j]&&temp[j] == false){
		    
		    rank[i] = j;
		    max = SCORE[j];
		}
	    }
	    temp[rank[i]] = true;
	    max = -1;
	}
	let data = "랭크"+short+"\n";
    	for(let i = 0;i<top;i++) data += (i+1)+"등 : "+NAME[rank[i]]+" - "+Math.round(SCORE[rank[i]])+"P\n";
	replier.reply(data);
    }
	
    if(msg == "!ver"){
        replier.reply(ver);
    }
    
    if(chat[0]=="!say"){
        var data = msg.replace(chat[0] + " ","");
        replier.reply(data);
    }
    if(chat[0]=="!add"){
    	if(SCORE[sendercode] < 100){
	    replier.reply("명령어를 추가하기 위해선 100P가 필요합니다!");
	    return;
	}
        if(chat[1]==undefined){
            replier.reply("명령어가 존재하지 않습니다!");
            return;
        }
        else if(chat[2]==undefined){
            replier.reply("출력이 존재하지 않습니다!");
            return;
        }
        var data = msg.replace(chat[0] + " " +chat[1] + " " ,"");
        //data = data.replace()
//replier.reply(data);
        var check = false;
        for(var i = 0;i<100;i++){
            if(chat[1]==input[i]){
                check = true;
                break;
            }
        }
        if(check == true){
            replier.reply("이미 사용중인 명령어 입니다!");
            return;
        }
        check = false;
        for(var i = 0;i<30;i++){
            if(input[i]==undefined&&data!=""){
	    	SCORE[sendercode] -= 100;
                input[i] = chat[1];
                output[i] = data;
                person[i] = sender;
                replier.reply("성공!\n"+sender+" - "+SCORE[sendercode]+"P");
                check = true;
break;
            }
        }
        if(check == false){
            replier.reply("추가 실패");
        }
    }
    if(chat[0]=="!remove"){
        var data = msg.replace(chat[0] + " ","");
        var check = false;
        for(var i = 0;i<30;i++){
            if(input[i]==data){
		if(sender==person[i]){
		    input[i] = undefined;
                    output[i] = undefined;
                    person[i] = undefined;
                    replier.reply("성공!");
		}else{
		    replier.reply(input[i] + " 명령어는 "+person[i]+ "님만 삭제할 수 있습니다!");
		}
                check = true;
            }
        }
        if(check == false){
            replier.reply("존재하지 않는 명령어입니다!");
        }
    }
    if(chat[0]=="!list"){
        var data="사용자 명령어 리스트"+short+"\n";
        var check=false;
        for(var i = 0;i<30;i++){
          //replier.reply(input[i]+" "+ output[i] + person[i]);
            if(input[i]!=""&&input[i]!=undefined){
                data += "\n" +input[i]+" - "+output[i] + " ("+person[i]+")";
                check=true;
            }
            
        }
        if(check == true ) replier.reply(data);
        else replier.reply("사용자 명령어가 없습니다.");
    }
    if(msg == "!score"){
        var code = -1;
    	for(var i = 0;i<=top;i++){
	    if(sender == NAME[i]){
	    	code = i;
	    }
	}
	if(code == -1){
	    replier.reply(sender + "님의 코드를 알수없어요. 조현우한테 아갈터세요!");
	    return;
	}else{
	    replier.reply(sender + " - " +Math.round(SCORE[code])+"P");
	}
    }
    for(var i = 0;i<30;i++){
        if(msg==input[i]) replier.reply(output[i]);
    }
    
}

PARSING_LINE
