PARSING_LINE

const ver = 0.03;

const short = "\u200b".repeat(500);

var sdcard = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();
var path = sdcard+"/ChatBot/BotData/Saves/";

function save(fileName, Data)
{
    let filePath = path+""+fileName;
    let file = new java.io.File(filePath),
        fileWriter = new java.io.FileWriter(file),
        bufferedWriter = new java.io.BufferedWriter(fileWriter);

   	bufferedWriter.write(new java.lang.String(Data));    
	bufferedWriter.close();
};

function read(fileName)
{
    let filePath = path+""+fileName,
        file = new java.io.File(filePath),
	    fileReader = new java.io.FileReader(file),
        bufferedReader = new java.io.BufferedReader(fileReader),
		fileReadLine = "", fileContent = bufferedReader.readLine();

	while ((fileReadLine = bufferedReader.readLine()) != null)
	{
		fileContent += "\n" + fileReadLine;
	}
	bufferedReader.close();

	return fileContent;
};

var input = [];

var output = [];

var person = [];

var comm = ["!ver","!say","!add","!remove","!list","!help"];
function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName) {
    var chat = msg.split(" ");
    if(chat[0] == "!save"){
    	for(var i =0;i<30;i++){
	    if(input[i] != undefined){
	        save("command",input[i]+"COMMA"+output[i]+"COMMA"+person[i]);
	    }
	}
	replier.reply("저장을 완료 했습니다!");
    }
    if(chat[0] == "!load"){
    	var lod = read("command").split("\n");
	for(var i =0;i<30;i++){
	    if(lod[i] != undefined){
	        var data = lod[i].split("COMMA");
		input[i] = data[0];
		output[i] = data[1];
		person[i] = data[2];
	    }
	}
	replier.reply("로딩을 완료 했습니다!");
    }
	
    if(msg == "!ver"){
        replier.reply(ver);
    }
    
    if(chat[0]=="!say"){
        var data = msg.replace(chat[0] + " ","");
        replier.reply(data);
    }
    if(chat[0]=="!add"){
        if(chat[1]==undefined){
            replier.reply("명령어가 존재하지 않습니다!");
            return;
        }
        else if(chat[2]==undefined){
            replier.reply("출력이 존재하지 않습니다!");
            return;
        }
        var data = msg.replace(chat[0] + " " +chat[1] + " " ,"");
        //data = data.replace()
//replier.reply(data);
        var check = false;
        for(var i = 0;i<30;i++){
            if(chat[1]==input[i]){
                check = true;
                break;
            }
        }
        if(check == true){
            replier.reply("이미 사용중인 명령어 입니다!");
            return;
        }
        check = false;
        for(var i = 0;i<30;i++){
            if(input[i]==undefined&&data!=""){
                input[i] = chat[1];
                output[i] = data;
                person[i] = sender;
                replier.reply("성공!");
                check = true;
break;
            }
        }
        if(check == false){
            replier.reply("추가 실패");
        }
    }
    if(chat[0]=="!remove"){
        var data = msg.replace(chat[0] + " ","");
        var check = false;
        for(var i = 0;i<30;i++){
            if(input[i]==data){
                input[i] = undefined;
                output[i] = undefined;
                person[i] = undefined;
                replier.reply("성공!");
                check = true;
            }
        }
        if(check == false){
            replier.reply("존재하지 않는 명령어거나 오류 발생");
        }
    }
    if(chat[0]=="!list"){
        var data="사용자 명령어 리스트"+short;
        var check=false;
        for(var i = 0;i<30;i++){
          //replier.reply(input[i]+" "+ output[i] + person[i]);
            if(input[i]!=""&&input[i]!=undefined){
                data += "\n" +input[i]+" - "+person[i];
                check=true;
            }
            
        }
        if(check == true ) replier.reply(data);
        else replier.reply("사용자 명령어가 없습니다.");
    }
    for(var i = 0;i<30;i++){
        if(msg==input[i]) replier.reply(output[i]);
    }
}

PARSING_LINE
