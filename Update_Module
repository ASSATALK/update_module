PARSING_LINE

const ver = "0.99a";

const short = "\u200b".repeat(500);

var sdcard = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();
var path = sdcard+"/ChatBot/BotData/Saves/";

var SCORE = [];
var NAME = [];
var top = 0;


var input = [];
var output = [];
var person = [];


function Save(){
    var data ="";
    for(var i =0;i<30;i++){
	if(input[i] != undefined){
	    if(input[i]==undefined) break;
	    data += input[i]+"COMMA"+output[i]+"COMMA"+person[i]+"\n";
        }
    }
    save("command.txt",data);
    data = "";
    for(var i = 0;i<top;i++){
    	data += SCORE[i]+"COMMA"+NAME[i]+"\n";
    }
    save("score.txt",data);
}
function Load(){
    var lod = read("command.txt").split("\n");
    for(var i =0;i<30;i++){
	if(lod[i] != undefined){
	    var data = lod[i].split("COMMA");
	    input[i] = data[0];
	    output[i] = data[1];
	    person[i] = data[2];
	}
    }
    var lod = read("score.txt").split("\n");
    top = 0;
    while(1){
        if(lod[top]!=undefined){
            var data = lod[top].split("COMMA");
	    SCORE[top] = Number(data[0]);
	    NAME[top] = data[1];
	    top++;
	}else{
	    break;
	}
    }
}

function save(fileName, Data)
{
    let filePath = path+""+fileName;
    let file = new java.io.File(filePath),
        fileWriter = new java.io.FileWriter(file),
        bufferedWriter = new java.io.BufferedWriter(fileWriter);
   	bufferedWriter.write(new java.lang.String(Data));    
	bufferedWriter.close();
	
   return;
};

function read(fileName)
{
    let filePath = path+""+fileName,
        file = new java.io.File(filePath),
	fileReader = new java.io.FileReader(file),
        bufferedReader = new java.io.BufferedReader(fileReader),
	fileReadLine = "", fileContent = bufferedReader.readLine();

	while ((fileReadLine = bufferedReader.readLine()) != null)
	{
		fileContent += "\n" + fileReadLine;
	}
	bufferedReader.close();

return fileContent;
};
function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName) {
    var sendercode;
    
    {
        var check = false;
        for(var i = 0;i<=top;i++){
    	    if(sender == NAME[i]){
	        SCORE[i]++;
	        check = true;
		sendercode = i;
       	    }
        }
        if(check == false){
	    replier.reply(sender+"님의 고유코드는 " +top+ "입니다! 닉네임을 변경한 경우라면 조현우한테 아가리 터세요!");
	    NAME[top] = sender;
	    SCORE[top] = 0;
	    top++;
        }
    }


    var chat = msg.split(" ");
    if(chat[0] == "!save"){
    	Save();
	replier.reply("저장을 완료 했습니다!");
    }
    if(chat[0] == "!load"){
    	Load();
	replier.reply("로딩을 완료 했습니다!"+top);
    }
	
    if(msg == "!ver"){
        replier.reply(ver);
    }
    
    if(chat[0]=="!say"){
        var data = msg.replace(chat[0] + " ","");
        replier.reply(data);
    }
    if(chat[0]=="!add"){
    	if(SCORE[sendercode] < 100){
	    replier.reply("명령어를 추가하기 위해선 100P가 필요합니다!");
	    return;
	}
        if(chat[1]==undefined){
            replier.reply("명령어가 존재하지 않습니다!");
            return;
        }
        else if(chat[2]==undefined){
            replier.reply("출력이 존재하지 않습니다!");
            return;
        }
        var data = msg.replace(chat[0] + " " +chat[1] + " " ,"");
        //data = data.replace()
//replier.reply(data);
        var check = false;
        for(var i = 0;i<30;i++){
            if(chat[1]==input[i]){
                check = true;
                break;
            }
        }
        if(check == true){
            replier.reply("이미 사용중인 명령어 입니다!");
            return;
        }
        check = false;
        for(var i = 0;i<30;i++){
            if(input[i]==undefined&&data!=""){
                input[i] = chat[1];
                output[i] = data;
                person[i] = sender;
                replier.reply("성공!");
		SCORE[sendercode] -= 100;
                check = true;
break;
            }
        }
        if(check == false){
            replier.reply("추가 실패");
        }
    }
    if(chat[0]=="!remove"){
        var data = msg.replace(chat[0] + " ","");
        var check = false;
        for(var i = 0;i<30;i++){
            if(input[i]==data){
		if(sender==person[i]){
		    input[i] = undefined;
                    output[i] = undefined;
                    person[i] = undefined;
                    replier.reply("성공!");
		}else{
		    replier.reply(input[i] + " 명령어는 "+person[i]+ "님만 삭제할 수 있습니다!");
		}
                check = true;
            }
        }
        if(check == false){
            replier.reply("존재하지 않는 명령어입니다!");
        }
    }
    if(chat[0]=="!list"){
        var data="사용자 명령어 리스트"+short+"\n";
        var check=false;
        for(var i = 0;i<30;i++){
          //replier.reply(input[i]+" "+ output[i] + person[i]);
            if(input[i]!=""&&input[i]!=undefined){
                data += "\n" +input[i]+" - "+output[i] + " ("+person[i]+")";
                check=true;
            }
            
        }
        if(check == true ) replier.reply(data);
        else replier.reply("사용자 명령어가 없습니다.");
    }
    if(msg == "!score"){
        var code = -1;
    	for(var i = 0;i<=top;i++){
	    if(sender == NAME[i]){
	    	code = i;
	    }
	}
	if(code == -1){
	    replier.reply(sender + "님의 코드를 알수없어요. 조현우한테 아갈터세요!");
	    return;
	}else{
	    replier.reply(sender + " - " +SCORE[code]+"P");
	}
    }
    for(var i = 0;i<30;i++){
        if(msg==input[i]) replier.reply(output[i]);
    }
    
}

PARSING_LINE
